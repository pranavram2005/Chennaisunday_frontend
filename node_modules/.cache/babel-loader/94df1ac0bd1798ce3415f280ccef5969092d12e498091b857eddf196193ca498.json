{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\nfunction getHostComponentFromComposite(inst) {\n  var type;\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\nmodule.exports = getHostComponentFromComposite;","map":{"version":3,"names":["ReactNodeTypes","require","getHostComponentFromComposite","inst","type","_renderedNodeType","COMPOSITE","_renderedComponent","HOST","EMPTY","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/getHostComponentFromComposite.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEhD,SAASC,6BAA6BA,CAACC,IAAI,EAAE;EAC3C,IAAIC,IAAI;EAER,OAAO,CAACA,IAAI,GAAGD,IAAI,CAACE,iBAAiB,MAAML,cAAc,CAACM,SAAS,EAAE;IACnEH,IAAI,GAAGA,IAAI,CAACI,kBAAkB;EAChC;EAEA,IAAIH,IAAI,KAAKJ,cAAc,CAACQ,IAAI,EAAE;IAChC,OAAOL,IAAI,CAACI,kBAAkB;EAChC,CAAC,MAAM,IAAIH,IAAI,KAAKJ,cAAc,CAACS,KAAK,EAAE;IACxC,OAAO,IAAI;EACb;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGT,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}