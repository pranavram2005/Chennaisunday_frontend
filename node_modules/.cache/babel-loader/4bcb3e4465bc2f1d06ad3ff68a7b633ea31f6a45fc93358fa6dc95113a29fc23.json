{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\nvar warning = require('fbjs/lib/warning');\nvar didWarnValueNull = false;\nfunction handleElement(debugID, element) {\n  if (element == null) {\n    return;\n  }\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\n    return;\n  }\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n    didWarnValueNull = true;\n  }\n}\nvar ReactDOMNullInputValuePropHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\nmodule.exports = ReactDOMNullInputValuePropHook;","map":{"version":3,"names":["ReactComponentTreeHook","require","warning","didWarnValueNull","handleElement","debugID","element","type","props","value","process","env","NODE_ENV","getStackAddendumByID","ReactDOMNullInputValuePropHook","onBeforeMountComponent","onBeforeUpdateComponent","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueNull = false;\n\nfunction handleElement(debugID, element) {\n  if (element == null) {\n    return;\n  }\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\n    return;\n  }\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n\n    didWarnValueNull = true;\n  }\n}\n\nvar ReactDOMNullInputValuePropHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\n\nmodule.exports = ReactDOMNullInputValuePropHook;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,kCAAkC,CAAC;AAExE,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEzC,IAAIE,gBAAgB,GAAG,KAAK;AAE5B,SAASC,aAAaA,CAACC,OAAO,EAAEC,OAAO,EAAE;EACvC,IAAIA,OAAO,IAAI,IAAI,EAAE;IACnB;EACF;EACA,IAAIA,OAAO,CAACC,IAAI,KAAK,OAAO,IAAID,OAAO,CAACC,IAAI,KAAK,UAAU,IAAID,OAAO,CAACC,IAAI,KAAK,QAAQ,EAAE;IACxF;EACF;EACA,IAAID,OAAO,CAACE,KAAK,IAAI,IAAI,IAAIF,OAAO,CAACE,KAAK,CAACC,KAAK,KAAK,IAAI,IAAI,CAACN,gBAAgB,EAAE;IAC9EO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGV,OAAO,CAAC,KAAK,EAAE,2CAA2C,GAAG,wEAAwE,GAAG,gCAAgC,EAAEI,OAAO,CAACC,IAAI,EAAEP,sBAAsB,CAACa,oBAAoB,CAACR,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC;IAE9RF,gBAAgB,GAAG,IAAI;EACzB;AACF;AAEA,IAAIW,8BAA8B,GAAG;EACnCC,sBAAsB,EAAE,SAAAA,CAAUV,OAAO,EAAEC,OAAO,EAAE;IAClDF,aAAa,CAACC,OAAO,EAAEC,OAAO,CAAC;EACjC,CAAC;EACDU,uBAAuB,EAAE,SAAAA,CAAUX,OAAO,EAAEC,OAAO,EAAE;IACnDF,aAAa,CAACC,OAAO,EAAEC,OAAO,CAAC;EACjC;AACF,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAGJ,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}