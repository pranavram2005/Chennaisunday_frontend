{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\nvar React = require('react/lib/React');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n    inst._wrapperState = {\n      selected: selected\n    };\n  },\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({\n      selected: undefined,\n      children: undefined\n    }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n    var content = flattenChildren(props.children);\n    if (content) {\n      hostProps.children = content;\n    }\n    return hostProps;\n  }\n};\nmodule.exports = ReactDOMOption;","map":{"version":3,"names":["_assign","require","React","ReactDOMComponentTree","ReactDOMSelect","warning","didWarnInvalidOptionChildren","flattenChildren","children","content","Children","forEach","child","process","env","NODE_ENV","ReactDOMOption","mountWrapper","inst","props","hostParent","selected","selectValue","selectParent","_tag","_hostParent","getSelectValueContext","value","Array","isArray","i","length","_wrapperState","postMountWrapper","_currentElement","node","getNodeFromInstance","setAttribute","getHostProps","hostProps","undefined","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/ReactDOMOption.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n};\n\nmodule.exports = ReactDOMOption;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}