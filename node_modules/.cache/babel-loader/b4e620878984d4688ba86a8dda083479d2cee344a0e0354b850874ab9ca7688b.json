{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n  injection: injection\n};\nmodule.exports = EventPluginUtils;","map":{"version":3,"names":["_prodInvariant","require","ReactErrorUtils","invariant","warning","ComponentTree","TreeTraversal","injection","injectComponentTree","Injected","process","env","NODE_ENV","getNodeFromInstance","getInstanceFromNode","injectTreeTraversal","isAncestor","getLowestCommonAncestor","isEndish","topLevelType","isMoveish","isStartish","validateEventDispatches","event","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","Array","isArray","listenersLen","length","instancesIsArr","instancesLen","executeDispatch","simulated","listener","inst","type","currentTarget","EventPluginUtils","invokeGuardedCallbackWithCatch","invokeGuardedCallback","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","node","a","b","getParentInstance","traverseTwoPhase","target","fn","arg","traverseEnterLeave","from","to","argFrom","argTo","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/EventPluginUtils.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}