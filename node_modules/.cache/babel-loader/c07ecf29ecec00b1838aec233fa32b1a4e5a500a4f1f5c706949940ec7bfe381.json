{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\nvar ReactReconciler = {\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID)\n  // 0 in production and for roots\n  {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n    internalInstance.receiveComponent(nextElement, transaction, context);\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n};\nmodule.exports = ReactReconciler;","map":{"version":3,"names":["ReactRef","require","ReactInstrumentation","warning","attachRefs","_currentElement","ReactReconciler","mountComponent","internalInstance","transaction","hostParent","hostContainerInfo","context","parentDebugID","process","env","NODE_ENV","_debugID","debugTool","onBeforeMountComponent","markup","ref","getReactMountReady","enqueue","onMountComponent","getHostNode","unmountComponent","safely","onBeforeUnmountComponent","detachRefs","onUnmountComponent","receiveComponent","nextElement","prevElement","_context","onBeforeUpdateComponent","refsChanged","shouldUpdateRefs","onUpdateComponent","performUpdateIfNecessary","updateBatchNumber","_updateBatchNumber","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/ReactReconciler.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots\n  {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n};\n\nmodule.exports = ReactReconciler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}