{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\nvar propTypesFactory = require('prop-types/factory');\nvar React = require('react/lib/React');\nvar PropTypes = propTypesFactory(React.isValidElement);\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\nmodule.exports = LinkedValueUtils;","map":{"version":3,"names":["_prodInvariant","require","ReactPropTypesSecret","propTypesFactory","React","PropTypes","isValidElement","invariant","warning","hasReadOnlyValue","button","checkbox","image","hidden","radio","reset","submit","_assertSingleLink","inputProps","checkedLink","valueLink","process","env","NODE_ENV","_assertValueLink","value","onChange","_assertCheckedLink","checked","propTypes","props","propName","componentName","type","readOnly","disabled","Error","func","loggedTypeFailures","getDeclarationErrorAddendum","owner","name","getName","LinkedValueUtils","checkPropTypes","tagName","hasOwnProperty","error","message","addendum","getValue","getChecked","executeOnChange","event","requestChange","target","call","undefined","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/LinkedValueUtils.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\nvar propTypesFactory = require('prop-types/factory');\n\nvar React = require('react/lib/React');\nvar PropTypes = propTypesFactory(React.isValidElement);\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}