{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n  _assign = require('object-assign');\nvar React = require('react/lib/React');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactReconciler = require('./ReactReconciler');\nif (process.env.NODE_ENV !== 'production') {\n  var checkReactTypeSpec = require('./checkReactTypeSpec');\n}\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n    var Component = this._currentElement.type;\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n    return markup;\n  },\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production' && !doConstruct) {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */);\n    this._renderedComponent = child;\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n    return markup;\n  },\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n    var inst = this._instance;\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n      }\n    }\n    return maskedContext;\n  },\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n    }\n  },\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n    this._pendingElement = null;\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n    if (!queue) {\n      return inst.state;\n    }\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n    return nextState;\n  },\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n    var inst = this._instance;\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n    this._updateRenderedComponent(transaction, unmaskedContext);\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */);\n      this._renderedComponent = child;\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedElement;\n    if (process.env.NODE_ENV !== 'production') {\n      renderedElement = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedElement = inst.render();\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n    return renderedElement;\n  },\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedElement;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n    return renderedElement;\n  },\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n  // Stub\n  _instantiateReactComponent: null\n};\nmodule.exports = ReactCompositeComponent;","map":{"version":3,"names":["_prodInvariant","require","_assign","React","ReactComponentEnvironment","ReactCurrentOwner","ReactErrorUtils","ReactInstanceMap","ReactInstrumentation","ReactNodeTypes","ReactReconciler","process","env","NODE_ENV","checkReactTypeSpec","emptyObject","invariant","shallowEqual","shouldUpdateReactComponent","warning","CompositeTypes","ImpureClass","PureClass","StatelessFunctional","StatelessComponent","Component","prototype","render","get","_currentElement","type","element","props","context","updater","warnIfInvalidElement","isValidElement","displayName","name","childContextTypes","shouldConstruct","isReactComponent","isPureComponent","isPureReactComponent","measureLifeCyclePerf","fn","debugID","timerType","debugTool","onBeginLifeCycleTimer","onEndLifeCycleTimer","nextMountID","ReactCompositeComponent","construct","_rootNodeID","_compositeType","_instance","_hostParent","_hostContainerInfo","_updateBatchNumber","_pendingElement","_pendingStateQueue","_pendingReplaceState","_pendingForceUpdate","_renderedNodeType","_renderedComponent","_context","_mountOrder","_topLevelWrapper","_pendingCallbacks","_calledComponentWillUnmount","_warnedAboutRefsInRender","mountComponent","transaction","hostParent","hostContainerInfo","_this","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","inst","_constructComponent","renderedElement","propsMutated","componentName","undefined","refs","set","getInitialState","isReactClassApproved","state","getName","getDefaultProps","propTypes","contextTypes","componentShouldUpdate","componentDidUnmount","componentWillRecieveProps","initialState","Array","isArray","markup","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","componentDidMount","getReactMountReady","enqueue","_debugID","current","_constructComponentWithoutOwner","checkpoint","e","rollback","_processPendingState","unmountComponent","componentWillMount","_renderValidatedComponent","nodeType","getType","child","_instantiateReactComponent","EMPTY","_processChildContext","childDebugIDs","onSetChildren","getHostNode","safely","componentWillUnmount","invokeGuardedCallback","bind","remove","_maskContext","maskedContext","contextName","_checkContextTypes","currentContext","childContext","getChildContext","onBeginProcessingChildContext","onEndProcessingChildContext","typeSpecs","values","location","receiveComponent","nextElement","nextContext","prevElement","prevContext","updateComponent","performUpdateIfNecessary","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","componentWillReceiveProps","nextState","shouldUpdate","shouldComponentUpdate","_performComponentUpdate","queue","replace","length","i","partial","call","unmaskedContext","_this2","hasComponentDidUpdate","Boolean","componentDidUpdate","prevState","componentWillUpdate","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","oldHostNode","nextMarkup","_replaceNodeWithMarkup","prevInstance","replaceNodeWithMarkup","_renderValidatedComponentWithoutOwnerOrContext","_isMockFunction","attachRef","ref","component","getPublicInstance","publicComponentInstance","detachRef","constructor","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/ReactCompositeComponent.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactReconciler = require('./ReactReconciler');\n\nif (process.env.NODE_ENV !== 'production') {\n  var checkReactTypeSpec = require('./checkReactTypeSpec');\n}\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production' && !doConstruct) {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedElement;\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderedElement = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedElement = inst.render();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n\n    return renderedElement;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedElement;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedElement;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n};\n\nmodule.exports = ReactCompositeComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}