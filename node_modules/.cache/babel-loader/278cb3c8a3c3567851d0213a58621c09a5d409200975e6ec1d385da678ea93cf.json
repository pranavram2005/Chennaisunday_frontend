{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\nmodule.exports = ReactDOMEmptyComponent;","map":{"version":3,"names":["_assign","require","DOMLazyTree","ReactDOMComponentTree","ReactDOMEmptyComponent","instantiate","_currentElement","_hostNode","_hostParent","_hostContainerInfo","_domID","prototype","mountComponent","transaction","hostParent","hostContainerInfo","context","domID","_idCounter","nodeValue","useCreateElement","ownerDocument","_ownerDocument","node","createComment","precacheNode","renderToStaticMarkup","receiveComponent","getHostNode","getNodeFromInstance","unmountComponent","uncacheNode","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/ReactDOMEmptyComponent.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAE9D,IAAIG,sBAAsB,GAAG,SAAAA,CAAUC,WAAW,EAAE;EAClD;EACA,IAAI,CAACC,eAAe,GAAG,IAAI;EAC3B;EACA,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,WAAW,GAAG,IAAI;EACvB,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAC9B,IAAI,CAACC,MAAM,GAAG,CAAC;AACjB,CAAC;AACDV,OAAO,CAACI,sBAAsB,CAACO,SAAS,EAAE;EACxCC,cAAc,EAAE,SAAAA,CAAUC,WAAW,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,OAAO,EAAE;IAC7E,IAAIC,KAAK,GAAGF,iBAAiB,CAACG,UAAU,EAAE;IAC1C,IAAI,CAACR,MAAM,GAAGO,KAAK;IACnB,IAAI,CAACT,WAAW,GAAGM,UAAU;IAC7B,IAAI,CAACL,kBAAkB,GAAGM,iBAAiB;IAE3C,IAAII,SAAS,GAAG,gBAAgB,GAAG,IAAI,CAACT,MAAM,GAAG,GAAG;IACpD,IAAIG,WAAW,CAACO,gBAAgB,EAAE;MAChC,IAAIC,aAAa,GAAGN,iBAAiB,CAACO,cAAc;MACpD,IAAIC,IAAI,GAAGF,aAAa,CAACG,aAAa,CAACL,SAAS,CAAC;MACjDhB,qBAAqB,CAACsB,YAAY,CAAC,IAAI,EAAEF,IAAI,CAAC;MAC9C,OAAOrB,WAAW,CAACqB,IAAI,CAAC;IAC1B,CAAC,MAAM;MACL,IAAIV,WAAW,CAACa,oBAAoB,EAAE;QACpC;QACA;QACA;QACA,OAAO,EAAE;MACX;MACA,OAAO,MAAM,GAAGP,SAAS,GAAG,KAAK;IACnC;EACF,CAAC;EACDQ,gBAAgB,EAAE,SAAAA,CAAA,EAAY,CAAC,CAAC;EAChCC,WAAW,EAAE,SAAAA,CAAA,EAAY;IACvB,OAAOzB,qBAAqB,CAAC0B,mBAAmB,CAAC,IAAI,CAAC;EACxD,CAAC;EACDC,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B3B,qBAAqB,CAAC4B,WAAW,CAAC,IAAI,CAAC;EACzC;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG7B,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}