{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n  return [current, next];\n}\nmodule.exports = accumulateInto;","map":{"version":3,"names":["_prodInvariant","require","invariant","accumulateInto","current","next","process","env","NODE_ENV","Array","isArray","push","apply","concat","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/accumulateInto.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAEpD,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,cAAcA,CAACC,OAAO,EAAEC,IAAI,EAAE;EACrC,EAAEA,IAAI,IAAI,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGN,SAAS,CAAC,KAAK,EAAE,uEAAuE,CAAC,GAAGF,cAAc,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;EAEnL,IAAII,OAAO,IAAI,IAAI,EAAE;IACnB,OAAOC,IAAI;EACb;;EAEA;EACA;EACA,IAAII,KAAK,CAACC,OAAO,CAACN,OAAO,CAAC,EAAE;IAC1B,IAAIK,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;MACvBD,OAAO,CAACO,IAAI,CAACC,KAAK,CAACR,OAAO,EAAEC,IAAI,CAAC;MACjC,OAAOD,OAAO;IAChB;IACAA,OAAO,CAACO,IAAI,CAACN,IAAI,CAAC;IAClB,OAAOD,OAAO;EAChB;EAEA,IAAIK,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;IACvB;IACA,OAAO,CAACD,OAAO,CAAC,CAACS,MAAM,CAACR,IAAI,CAAC;EAC/B;EAEA,OAAO,CAACD,OAAO,EAAEC,IAAI,CAAC;AACxB;AAEAS,MAAM,CAACC,OAAO,GAAGZ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}