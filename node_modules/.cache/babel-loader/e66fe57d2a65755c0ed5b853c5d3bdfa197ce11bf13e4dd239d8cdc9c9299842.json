{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  },\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  }\n};\nmodule.exports = DOMPropertyOperations;","map":{"version":3,"names":["DOMProperty","require","ReactDOMComponentTree","ReactInstrumentation","quoteAttributeValueForBrowser","warning","VALID_ATTRIBUTE_NAME_REGEX","RegExp","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","attributeName","hasOwnProperty","test","process","env","NODE_ENV","shouldIgnoreValue","propertyInfo","value","hasBooleanValue","hasNumericValue","isNaN","hasPositiveNumericValue","hasOverloadedBooleanValue","DOMPropertyOperations","createMarkupForID","id","ID_ATTRIBUTE_NAME","setAttributeForID","node","setAttribute","createMarkupForRoot","ROOT_ATTRIBUTE_NAME","setAttributeForRoot","createMarkupForProperty","name","properties","isCustomAttribute","createMarkupForCustomAttribute","setValueForProperty","mutationMethod","deleteValueForProperty","mustUseProperty","propertyName","namespace","attributeNamespace","setAttributeNS","setValueForAttribute","payload","debugTool","onHostOperation","instanceID","getInstanceFromNode","_debugID","type","removeAttribute","deleteValueForAttribute","undefined","propName","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/DOMPropertyOperations.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  }\n};\n\nmodule.exports = DOMPropertyOperations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}