{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n    return syntheticEvent;\n  }\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n  eventTypes: eventTypes,\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n    return null;\n  },\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\nmodule.exports = SelectEventPlugin;","map":{"version":3,"names":["EventPropagators","require","ExecutionEnvironment","ReactDOMComponentTree","ReactInputSelection","SyntheticEvent","getActiveElement","isTextInputElement","shallowEqual","skipSelectionChangeEvent","canUseDOM","document","documentMode","eventTypes","select","phasedRegistrationNames","bubbled","captured","dependencies","activeElement","activeElementInst","lastSelection","mouseDown","hasListener","getSelection","node","hasSelectionCapabilities","start","selectionStart","end","selectionEnd","window","selection","anchorNode","anchorOffset","focusNode","focusOffset","range","createRange","parentElement","text","top","boundingTop","left","boundingLeft","constructSelectEvent","nativeEvent","nativeEventTarget","currentSelection","syntheticEvent","getPooled","type","target","accumulateTwoPhaseDispatches","SelectEventPlugin","extractEvents","topLevelType","targetInst","targetNode","getNodeFromInstance","contentEditable","didPutListener","inst","registrationName","listener","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/SelectEventPlugin.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}