{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation({\n      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n      type: 'replace text',\n      payload: stringText\n    });\n  }\n}\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: prevInstance._debugID,\n        type: 'replace with',\n        payload: markup.toString()\n      });\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: nextInstance._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n  replaceDelimitedText: replaceDelimitedText,\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case 'INSERT_MARKUP':\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'insert child',\n              payload: {\n                toIndex: update.toIndex,\n                content: update.content.toString()\n              }\n            });\n          }\n          break;\n        case 'MOVE_EXISTING':\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'move child',\n              payload: {\n                fromIndex: update.fromIndex,\n                toIndex: update.toIndex\n              }\n            });\n          }\n          break;\n        case 'SET_MARKUP':\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace children',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'TEXT_CONTENT':\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace text',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'REMOVE_NODE':\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'remove child',\n              payload: {\n                fromIndex: update.fromIndex\n              }\n            });\n          }\n          break;\n      }\n    }\n  }\n};\nmodule.exports = DOMChildrenOperations;","map":{"version":3,"names":["DOMLazyTree","require","Danger","ReactDOMComponentTree","ReactInstrumentation","createMicrosoftUnsafeLocalFunction","setInnerHTML","setTextContent","getNodeAfter","parentNode","node","Array","isArray","nextSibling","firstChild","insertChildAt","childNode","referenceNode","insertBefore","insertLazyTreeChildAt","childTree","insertTreeBefore","moveChild","moveDelimitedText","removeChild","closingComment","removeDelimitedText","openingComment","nextNode","startNode","replaceDelimitedText","stringText","nodeAfterComment","document","createTextNode","process","env","NODE_ENV","debugTool","onHostOperation","instanceID","getInstanceFromNode","_debugID","type","payload","dangerouslyReplaceNodeWithMarkup","oldChild","markup","prevInstance","toString","nextInstance","DOMChildrenOperations","processUpdates","updates","parentNodeDebugID","k","length","update","content","afterNode","toIndex","fromNode","fromIndex","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/DOMChildrenOperations.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation({\n      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n      type: 'replace text',\n      payload: stringText\n    });\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: prevInstance._debugID,\n        type: 'replace with',\n        payload: markup.toString()\n      });\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: nextInstance._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case 'INSERT_MARKUP':\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'insert child',\n              payload: {\n                toIndex: update.toIndex,\n                content: update.content.toString()\n              }\n            });\n          }\n          break;\n        case 'MOVE_EXISTING':\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'move child',\n              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n            });\n          }\n          break;\n        case 'SET_MARKUP':\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace children',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'TEXT_CONTENT':\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace text',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'REMOVE_NODE':\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'remove child',\n              payload: { fromIndex: update.fromIndex }\n            });\n          }\n          break;\n      }\n    }\n  }\n};\n\nmodule.exports = DOMChildrenOperations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}