{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n  var isNonNumeric = isNaN(value);\n  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\nmodule.exports = dangerousStyleValue;","map":{"version":3,"names":["CSSProperty","require","warning","isUnitlessNumber","styleWarnings","dangerousStyleValue","name","value","component","isCustomProperty","isEmpty","isNonNumeric","isNaN","hasOwnProperty","process","env","NODE_ENV","owner","_currentElement","_owner","ownerName","getName","warned","warnings","type","trim","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/dangerousStyleValue.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEzC,IAAIE,gBAAgB,GAAGH,WAAW,CAACG,gBAAgB;AACnD,IAAIC,aAAa,GAAG,CAAC,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,gBAAgB,EAAE;EACrE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,OAAO,GAAGH,KAAK,IAAI,IAAI,IAAI,OAAOA,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,EAAE;EACzE,IAAIG,OAAO,EAAE;IACX,OAAO,EAAE;EACX;EAEA,IAAIC,YAAY,GAAGC,KAAK,CAACL,KAAK,CAAC;EAC/B,IAAIE,gBAAgB,IAAIE,YAAY,IAAIJ,KAAK,KAAK,CAAC,IAAIJ,gBAAgB,CAACU,cAAc,CAACP,IAAI,CAAC,IAAIH,gBAAgB,CAACG,IAAI,CAAC,EAAE;IACtH,OAAO,EAAE,GAAGC,KAAK,CAAC,CAAC;EACrB;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAIO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC;MACA;MACA,IAAIR,SAAS,IAAID,KAAK,KAAK,GAAG,EAAE;QAC9B,IAAIU,KAAK,GAAGT,SAAS,CAACU,eAAe,CAACC,MAAM;QAC5C,IAAIC,SAAS,GAAGH,KAAK,GAAGA,KAAK,CAACI,OAAO,CAAC,CAAC,GAAG,IAAI;QAC9C,IAAID,SAAS,IAAI,CAAChB,aAAa,CAACgB,SAAS,CAAC,EAAE;UAC1ChB,aAAa,CAACgB,SAAS,CAAC,GAAG,CAAC,CAAC;QAC/B;QACA,IAAIE,MAAM,GAAG,KAAK;QAClB,IAAIF,SAAS,EAAE;UACb,IAAIG,QAAQ,GAAGnB,aAAa,CAACgB,SAAS,CAAC;UACvCE,MAAM,GAAGC,QAAQ,CAACjB,IAAI,CAAC;UACvB,IAAI,CAACgB,MAAM,EAAE;YACXC,QAAQ,CAACjB,IAAI,CAAC,GAAG,IAAI;UACvB;QACF;QACA,IAAI,CAACgB,MAAM,EAAE;UACXR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGd,OAAO,CAAC,KAAK,EAAE,6DAA6D,GAAG,4DAA4D,GAAG,oDAAoD,EAAEM,SAAS,CAACU,eAAe,CAACM,IAAI,EAAEJ,SAAS,IAAI,SAAS,EAAEd,IAAI,EAAEC,KAAK,CAAC,GAAG,KAAK,CAAC;QAC3T;MACF;IACF;IACAA,KAAK,GAAGA,KAAK,CAACkB,IAAI,CAAC,CAAC;EACtB;EACA,OAAOlB,KAAK,GAAG,IAAI;AACrB;AAEAmB,MAAM,CAACC,OAAO,GAAGtB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}