{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar React = require('react/lib/React');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */);\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  TopLevelWrapper: TopLevelWrapper,\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n    return prevComponent;\n  },\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n    return componentInstance;\n  },\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n    var nextWrappedElement = React.createElement(TopLevelWrapper, {\n      child: nextElement\n    });\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.') : void 0;\n    }\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\nmodule.exports = ReactMount;","map":{"version":3,"names":["_prodInvariant","require","DOMLazyTree","DOMProperty","React","ReactBrowserEventEmitter","ReactCurrentOwner","ReactDOMComponentTree","ReactDOMContainerInfo","ReactDOMFeatureFlags","ReactFeatureFlags","ReactInstanceMap","ReactInstrumentation","ReactMarkupChecksum","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","warning","ATTR_NAME","ID_ATTRIBUTE_NAME","ROOT_ATTR_NAME","ROOT_ATTRIBUTE_NAME","ELEMENT_NODE_TYPE","DOC_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","instancesByReactRootID","firstDifferenceIndex","string1","string2","minLen","Math","min","length","i","charAt","getReactRootElementInContainer","container","nodeType","documentElement","firstChild","internalGetID","node","getAttribute","mountComponentIntoNode","wrapperInstance","transaction","shouldReuseMarkup","context","markerName","logTopLevelRenders","wrappedElement","_currentElement","props","child","type","displayName","name","console","time","markup","mountComponent","timeEnd","_renderedComponent","_topLevelWrapper","ReactMount","_mountImageIntoNode","batchedMountComponentIntoNode","componentInstance","ReactReconcileTransaction","getPooled","useCreateElement","perform","release","unmountComponentFromNode","instance","safely","process","env","NODE_ENV","debugTool","onBeginFlush","unmountComponent","onEndFlush","lastChild","removeChild","hasNonRootReactChild","rootEl","inst","getInstanceFromNode","_hostParent","nodeIsRenderedByOtherInstance","isReactNode","isValidContainer","hasAttribute","getHostRootInstanceInContainer","prevHostInstance","getTopLevelWrapperInContainer","root","_hostContainerInfo","topLevelRootCounter","TopLevelWrapper","rootID","prototype","isReactComponent","render","isReactTopLevelWrapper","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","nextElement","nextContext","callback","enqueueElementInternal","enqueueCallbackInternal","_renderNewRootComponent","current","getName","ensureScrollValueMonitoring","batchedUpdates","wrapperID","_instance","renderSubtreeIntoContainer","parentComponent","has","_renderSubtreeIntoContainer","validateCallback","isValidElement","undefined","tagName","toUpperCase","nextWrappedElement","createElement","parentInst","get","_processChildContext","_context","prevWrappedElement","prevElement","publicInst","getPublicInstance","updatedCallback","call","unmountComponentAtNode","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","nextSibling","rootElementSibling","component","isContainerReactRoot","rootElement","canReuseMarkup","precacheNode","checksum","CHECKSUM_ATTR_NAME","removeAttribute","rootMarkup","outerHTML","setAttribute","normalizedMarkup","normalizer","document","innerHTML","body","appendChild","contentDocument","write","diffIndex","difference","substring","insertTreeBefore","hostNode","_debugID","onHostOperation","instanceID","payload","toString","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/ReactMount.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar React = require('react/lib/React');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = React.createElement(TopLevelWrapper, {\n      child: nextElement\n    });\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}