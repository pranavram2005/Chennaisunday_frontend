{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n  },\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n      delete listenerBank[registrationName][key];\n    }\n  },\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n};\nmodule.exports = EventPluginHub;","map":{"version":3,"names":["_prodInvariant","require","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","invariant","listenerBank","eventQueue","executeDispatchesAndRelease","event","simulated","executeDispatchesInOrder","isPersistent","constructor","release","executeDispatchesAndReleaseSimulated","e","executeDispatchesAndReleaseTopLevel","getDictionaryKey","inst","_rootNodeID","isInteractive","tag","shouldPreventMouseEvent","name","type","props","disabled","EventPluginHub","injection","injectEventPluginOrder","injectEventPluginsByName","putListener","registrationName","listener","process","env","NODE_ENV","key","bankForRegistrationName","PluginModule","registrationNameModules","didPutListener","getListener","_currentElement","deleteListener","willDeleteListener","deleteAllListeners","hasOwnProperty","extractEvents","topLevelType","targetInst","nativeEvent","nativeEventTarget","events","plugins","i","length","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/EventPluginHub.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n};\n\nmodule.exports = EventPluginHub;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}