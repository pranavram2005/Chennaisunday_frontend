{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\nmodule.exports = ReactEventListener;","map":{"version":3,"names":["_assign","require","EventListener","ExecutionEnvironment","PooledClass","ReactDOMComponentTree","ReactUpdates","getEventTarget","getUnboundedScrollPosition","findParent","inst","_hostParent","rootNode","getNodeFromInstance","container","parentNode","getClosestInstanceFromNode","TopLevelCallbackBookKeeping","topLevelType","nativeEvent","ancestors","prototype","destructor","length","addPoolingTo","twoArgumentPooler","handleTopLevelImpl","bookKeeping","nativeEventTarget","targetInst","ancestor","push","i","ReactEventListener","_handleTopLevel","scrollValueMonitor","cb","scrollPosition","window","_enabled","WINDOW_HANDLE","canUseDOM","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","trapBubbledEvent","handlerBaseName","element","listen","dispatchEvent","bind","trapCapturedEvent","capture","monitorScrollValue","refresh","callback","getPooled","batchedUpdates","release","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/ReactEventListener.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}