{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  }\n};\nvar EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n    var from;\n    var to;\n    if (topLevelType === 'topMouseOut') {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n    return [leave, enter];\n  }\n};\nmodule.exports = EnterLeaveEventPlugin;","map":{"version":3,"names":["EventPropagators","require","ReactDOMComponentTree","SyntheticMouseEvent","eventTypes","mouseEnter","registrationName","dependencies","mouseLeave","EnterLeaveEventPlugin","extractEvents","topLevelType","targetInst","nativeEvent","nativeEventTarget","relatedTarget","fromElement","win","window","doc","ownerDocument","defaultView","parentWindow","from","to","related","toElement","getClosestInstanceFromNode","fromNode","getNodeFromInstance","toNode","leave","getPooled","type","target","enter","accumulateEnterLeaveDispatches","module","exports"],"sources":["D:/Project_CS/react_side/myapp/node_modules/react-file-viewer/node_modules/react-dom/lib/EnterLeaveEventPlugin.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === 'topMouseOut') {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n};\n\nmodule.exports = EnterLeaveEventPlugin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}